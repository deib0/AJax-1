{"mappings":"AAAA,IAAIA,EAAI,EACRC,SAASC,iBAAiB,SAAS,KAC/B,MAAMC,EAAU,IAAIC,eACpBC,QAAQC,IAAIN,GACZG,EAAQI,KAAK,MAAO,QAAQP,UAC5BG,EAAQK,mBAAqB,KACzB,GAA2B,IAAvBL,EAAQM,YAAuC,MAAnBN,EAAQO,OAAgB,CACxCC,KAAKC,MAAMT,EAAQU,UAC3BC,SAAQC,IACR,MAAMC,EAAKC,SAASC,cAAc,MAClCF,EAAGG,YAAcJ,EAAKK,GACtBC,KAAKC,YAAYN,MAErBhB,GAAQ,IAGhBG,EAAQoB,UAGZC,QAAQtB,iBAAiB,SAAS,KAC9B,MAAMC,EAAU,IAAIC,eACpBD,EAAQI,KAAK,MAAO,WACpBF,QAAQC,IAAIH,EAAQM,YACUN,EAAtBK,mBAAqB,KACzB,GAA2B,IAAvBL,EAAQM,YAAoBN,EAAQO,OAAS,KAAOP,EAAQO,QAAU,IAAK,CAC3E,IAAIe,EACJ,IACIA,EAAMd,KAAKC,MAAMT,EAAQU,UAC3B,MAAOa,GACLrB,QAAQC,IAAI,aACID,QAARC,IAAIoB,GACZD,EAAM,CAAEE,KAAQ,QAEpBtB,QAAQC,IAAImB,KAGpBtB,EAAQoB,UAEZK,OAAO1B,iBAAiB,SAAS,KAC7B,MAAMC,EAAU,IAAIC,eACpBD,EAAQI,KAAK,MAAO,UACpBJ,EAAQK,mBAAqB,KACzB,GAA2B,IAAvBL,EAAQM,YACJN,EAAQO,OAAS,IAAK,CACtB,MACMmB,EADM1B,EAAQ2B,YACHC,qBAAqB,WAAW,GAAGZ,YAChDd,QAAIC,IAAIuB,KAIxB1B,EAAQoB,UAGZS,OAAO9B,iBAAiB,SAAS,KAC7B,MAAMC,EAAU,IAAIC,eACZD,EAAAI,KAAK,MAAO,cACNJ,EAAN8B,OAAS,KACb,MAAMC,EAAQjB,SAASC,cAAc,SACrCgB,EAAMC,UAAYhC,EAAQU,SACVI,SAAPmB,KAAKd,YAAYY,IAE9B/B,EAAQkC,QAAU,KACdhC,QAAQC,IAAI,QAEhBH,EAAQoB,UAGZe,MAAMpC,iBAAiB,SAAS,KAC5B,MAAMC,EAAU,IAAIC,eACpBD,EAAQI,KAAK,MAAO,SACpBJ,EAAQ8B,OAAS,KACb5B,QAAQC,IAAI,YACJ,MAAFiC,EAAStB,SAASC,cAAc,UACtCqB,EAAOJ,UAAYhC,EAAQU,SAC3BI,SAASuB,KAAKlB,YAAYiB,IAE9BpC,EAAQkC,QAAU,KACdhC,QAAQC,IAAI,YAEhBH,EAAQoB,UAGZkB,QAAQvC,iBAAiB,SAAS,KAC9B,MAAMC,EAAU,IAAIC,eACpBD,EAAQI,KAAK,MAAO,WACpBJ,EAAQK,mBAAqB,KACzB,GAA2B,IAAvBL,EAAQM,WACR,GAAIN,EAAQO,OAAS,IAAK,CACtB,MAAMgC,EAASzB,SAASC,cAAc,OACtCwB,EAAOP,UAAYhC,EAAQU,SAC3BI,SAASuB,KAAKlB,YAAYoB,QAE1BrC,QAAQC,IAAI,aAKxBH,EAAQoB","sources":["public/main.js"],"sourcesContent":["let n = 2\r\nnextPage.addEventListener('click', () => {//  请求下一页\r\n    const request = new XMLHttpRequest()\r\n    console.log(n);\r\n    request.open('GET', `/page${n}.json`)\r\n    request.onreadystatechange = () => {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            const arr = JSON.parse(request.response)\r\n            arr.forEach(item => {\r\n                const li = document.createElement('li')\r\n                li.textContent = item.id\r\n                page.appendChild(li)\r\n            });\r\n            n = n + 1\r\n        }\r\n    }\r\n    request.send()\r\n})\r\n\r\ngetJSON.addEventListener('click', () => {\r\n    const request = new XMLHttpRequest()\r\n    request.open('GET', '/5.json')\r\n    console.log(request.readyState);//  这里可以打印出请求状态码1,即创建\r\n    request.onreadystatechange = () => {\r\n        if (request.readyState === 4 && request.status < 300 && request.status >= 200) {\r\n            let obj\r\n            try {\r\n                obj = JSON.parse(request.response)\r\n            } catch (error) {//  如果字符串不符合JS语法,就在这里报错并给obj一个保底值\r\n                console.log('出错了,错误详细是')\r\n                console.log(error);\r\n                obj = { 'name': 'user' }//  保底值\r\n            }\r\n            console.log(obj);\r\n        }\r\n    }\r\n    request.send()\r\n})\r\ngetXml.addEventListener('click', () => {\r\n    const request = new XMLHttpRequest()\r\n    request.open('GET', '/4.xml')\r\n    request.onreadystatechange = () => {\r\n        if (request.readyState === 4) {\r\n            if (request.status < 300) {\r\n                const dom = request.responseXML//  注意responseXML的方法与其他的不一样\r\n                const text = dom.getElementsByTagName('warning')[0].textContent// XML支持DOM\r\n                console.log(text);\r\n            }\r\n        }\r\n    }\r\n    request.send()\r\n})\r\n\r\ngetCss.addEventListener('click', () => {\r\n    const request = new XMLHttpRequest()//构造请求\r\n    request.open(\"GET\", \"/style.css\")//  该路径是http的路径\r\n    request.onload = () => {//  请求成功,则\r\n        const style = document.createElement('style')\r\n        style.innerHTML = request.response//  添加获取请求内容\r\n        document.head.appendChild(style)\r\n    }\r\n    request.onerror = () => {\r\n        console.log('失败了')\r\n    }\r\n    request.send()//  发送请求\r\n})\r\n\r\ngetJs.addEventListener('click', () => {\r\n    const request = new XMLHttpRequest()\r\n    request.open('GET', '/2.js')\r\n    request.onload = () => {\r\n        console.log('加载2.js成功');\r\n        const script = document.createElement('script')\r\n        script.innerHTML = request.response\r\n        document.body.appendChild(script)\r\n    }\r\n    request.onerror = () => {\r\n        console.log('2.js失败了');\r\n    }\r\n    request.send()\r\n})\r\n\r\ngetHtml.addEventListener('click', () => {\r\n    const request = new XMLHttpRequest()\r\n    request.open('GET', '/3.html')\r\n    request.onreadystatechange = () => {//  请求状态改变事件\r\n        if (request.readyState === 4) {//  请求状态等于4再执行\r\n            if (request.status < 300) {//  判断回应的状态码\r\n                const newDiv = document.createElement('div')\r\n                newDiv.innerHTML = request.response\r\n                document.body.appendChild(newDiv)\r\n            } else {\r\n                console.log('html加载失败')\r\n            }\r\n\r\n        }\r\n    }\r\n    request.send()\r\n})"],"names":["n","nextPage","addEventListener","request","XMLHttpRequest","console","log","open","onreadystatechange","readyState","status","JSON","parse","response","forEach","item","li","document","createElement","textContent","id","page","appendChild","send","getJSON","obj","error","name","getXml","text","responseXML","getElementsByTagName","getCss","onload","style","innerHTML","head","onerror","getJs","script","body","getHtml","newDiv"],"version":3,"file":"index.cf365273.js.map"}